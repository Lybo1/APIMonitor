2025-03-06 02:19:02.340 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 02:19:02.551 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 02:19:03.265 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 02:19:03.267 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 02:19:03.383 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 02:19:03.560 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:19:03.649 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 02:19:03.931 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:19:03.984 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:19:04.008 +02:00 [DBG] Created DbConnection. (22ms).
2025-03-06 02:19:04.016 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:33.472 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 02:19:42.181 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 02:19:48.082 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 02:19:48.083 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 02:19:48.196 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 02:19:48.371 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:19:48.459 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 02:19:48.727 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:19:48.778 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:19:48.802 +02:00 [DBG] Created DbConnection. (21ms).
2025-03-06 02:19:48.810 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.231 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.239 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:19:49.246 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-03-06 02:19:49.255 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-03-06 02:19:49.266 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 02:19:49.341 +02:00 [INF] Executed DbCommand (73ms) [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 02:19:49.397 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 1}'.
2025-03-06 02:19:49.421 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.429 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 81ms reading results.
2025-03-06 02:19:49.433 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.441 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (7ms).
2025-03-06 02:19:49.446 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.447 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.447 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:19:49.447 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.448 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.448 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 02:19:49.453 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 02:19:49.453 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 02:19:49.453 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.453 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:19:49.454 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.454 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:19:49.457 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-06 02:19:49.464 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetDateTime(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:19:49.466 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.466 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.466 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:19:49.466 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.466 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.466 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 02:19:49.471 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 02:19:49.492 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'User' entity with key '{Id: 1}'.
2025-03-06 02:19:49.530 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.530 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 58ms reading results.
2025-03-06 02:19:49.530 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.530 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:19:49.534 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-06 02:19:49.538 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:19:49.539 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.539 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.540 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:19:49.540 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.540 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.540 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 02:19:49.543 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedRoleName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 02:19:49.544 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.544 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 1ms reading results.
2025-03-06 02:19:49.544 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.544 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:19:49.557 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<int>>()
    .FirstOrDefault(e => EF.Property<int>(e, "UserId") == __p_0 && EF.Property<int>(e, "RoleId") == __p_1)'
2025-03-06 02:19:49.585 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<int>.UserId (int) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<int>.RoleId (int) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<int>.UserId (int) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<int>.RoleId (int) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<int>.UserId, IdentityUserRole<int>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetInt32(0), 
                        (object)dataReader.GetInt32(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<int> instance;
                                    instance = new IdentityUserRole<int>();
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:19:49.588 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.588 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.588 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:19:49.588 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.589 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:19:49.589 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='1', @__p_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 02:19:49.592 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='1', @__p_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 02:19:49.603 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityUserRole' entity with key '{UserId: 1, RoleId: 1}'.
2025-03-06 02:19:49.604 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.604 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 12ms reading results.
2025-03-06 02:19:49.605 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.605 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:19:49.608 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:19:49.610 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:19:49.612 +02:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-03-06 02:19:49.651 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-06 02:19:49.710 +02:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-03-06 02:19:49.722 +02:00 [DBG] Hosting starting
2025-03-06 02:19:49.730 +02:00 [DBG] Reading data from file '/home/lyuboslav/.aspnet/DataProtection-Keys/key-3337972f-7582-481c-bfd3-27e1985c4e4c.xml'.
2025-03-06 02:19:49.734 +02:00 [DBG] Found key {3337972f-7582-481c-bfd3-27e1985c4e4c}.
2025-03-06 02:19:49.744 +02:00 [DBG] Considering key {3337972f-7582-481c-bfd3-27e1985c4e4c} with expiration date 2025-04-03 12:22:57Z as default key.
2025-03-06 02:19:49.746 +02:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-06 02:19:49.749 +02:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2025-03-06 02:19:49.749 +02:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2025-03-06 02:19:49.751 +02:00 [DBG] Using key {3337972f-7582-481c-bfd3-27e1985c4e4c} as the default key.
2025-03-06 02:19:49.752 +02:00 [DBG] Key ring with default key {3337972f-7582-481c-bfd3-27e1985c4e4c} was loaded during application startup.
2025-03-06 02:19:49.781 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-03-06 02:19:49.782 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-06 02:19:49.853 +02:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-03-06 02:19:49.862 +02:00 [INF] Now listening on: https://localhost:7074
2025-03-06 02:19:49.862 +02:00 [INF] Now listening on: http://localhost:5028
2025-03-06 02:19:49.862 +02:00 [DBG] Loaded hosting startup assembly APIMonitor.server
2025-03-06 02:19:49.862 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-06 02:19:49.863 +02:00 [INF] Hosting environment: Development
2025-03-06 02:19:49.863 +02:00 [INF] Content root path: /home/lyuboslav/Desktop/APIMonitor/APIMonitor.server
2025-03-06 02:19:49.865 +02:00 [DBG] Hosting started
2025-03-06 02:20:16.667 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" accepted.
2025-03-06 02:20:16.669 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" started.
2025-03-06 02:20:16.698 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/index.html - null null
2025-03-06 02:20:16.753 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:16.755 +02:00 [DBG] Compiling query expression: 
'DbSet<IpBlock>()
    .FirstOrDefault(ip => ip.Ip == __ipAddress_0)'
2025-03-06 02:20:16.759 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IpBlock>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IpBlock>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IpBlock.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IpBlock.BlockedUntil (DateTime) Required, 1], [Property: IpBlock.FailedAttempts (int) Required, 2], [Property: IpBlock.Ip (string) Required MaxLength(15), 3], [Property: IpBlock.Reason (string) Required MaxLength(200), 4] }
            SELECT TOP(1) i.Id, i.BlockedUntil, i.FailedAttempts, i.Ip, i.Reason
            FROM IpBlocks AS i
            WHERE i.Ip == @__ipAddress_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IpBlock.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IpBlock.BlockedUntil (DateTime) Required, 1], [Property: IpBlock.FailedAttempts (int) Required, 2], [Property: IpBlock.Ip (string) Required MaxLength(15), 3], [Property: IpBlock.Reason (string) Required MaxLength(200), 4] }
            SELECT TOP(1) i.Id, i.BlockedUntil, i.FailedAttempts, i.Ip, i.Reason
            FROM IpBlocks AS i
            WHERE i.Ip == @__ipAddress_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IpBlock entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IpBlock instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IpBlock);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IpBlock.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IpBlock)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")]: 
                            {
                                return 
                                {
                                    IpBlock instance;
                                    instance = new IpBlock();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<BlockedUntil>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<FailedAttempts>k__BackingField = dataReader.GetInt32(2);
                                    instance.<Ip>k__BackingField = dataReader.GetString(3);
                                    instance.<Reason>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IpBlock)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 02:20:16.761 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:16.762 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:16.762 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:16.762 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:16.763 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:16.763 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:16.763 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:16.763 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:16.771 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:16.773 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:16.773 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 1ms reading results.
2025-03-06 02:20:16.774 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:16.774 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:16.774 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:16.774 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:16.774 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:16.921 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" completed keep alive response.
2025-03-06 02:20:16.922 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/index.html - 200 null text/html;charset=utf-8 225.4066ms
2025-03-06 02:20:17.170 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/swagger-ui.css - null null
2025-03-06 02:20:17.173 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" accepted.
2025-03-06 02:20:17.173 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" started.
2025-03-06 02:20:17.174 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/index.css - null null
2025-03-06 02:20:17.175 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" accepted.
2025-03-06 02:20:17.175 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" started.
2025-03-06 02:20:17.176 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/swagger-ui-bundle.js - null null
2025-03-06 02:20:17.178 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" accepted.
2025-03-06 02:20:17.178 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" started.
2025-03-06 02:20:17.179 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/swagger-ui-standalone-preset.js - null null
2025-03-06 02:20:17.183 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" accepted.
2025-03-06 02:20:17.183 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" started.
2025-03-06 02:20:17.183 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/index.js - null null
2025-03-06 02:20:17.186 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.186 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.186 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.186 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.186 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.187 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.187 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.187 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.187 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.188 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.188 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.188 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.188 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.188 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.188 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.188 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.188 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.188 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.188 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.188 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.188 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.189 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.189 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.189 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.189 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.191 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.191 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.191 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.191 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.192 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.192 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.192 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.192 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.215 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.215 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.215 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.215 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.215 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.216 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.215 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.216 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-06 02:20:17.216 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-03-06 02:20:17.217 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.217 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.218 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.218 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.218 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.218 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.218 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.218 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.218 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.219 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.219 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.219 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.219 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.219 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.219 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.219 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.219 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.220 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-03-06 02:20:17.221 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" completed keep alive response.
2025-03-06 02:20:17.221 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" completed keep alive response.
2025-03-06 02:20:17.222 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/swagger-ui.css - 200 152035 text/css 51.1591ms
2025-03-06 02:20:17.222 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/index.js - 200 null application/javascript;charset=utf-8 38.0091ms
2025-03-06 02:20:17.227 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.227 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.227 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.227 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.227 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.227 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.228 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-03-06 02:20:17.227 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.228 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" completed keep alive response.
2025-03-06 02:20:17.228 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-03-06 02:20:17.228 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/swagger-ui-bundle.js - 200 1426050 text/javascript 52.3855ms
2025-03-06 02:20:17.228 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-03-06 02:20:17.229 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.229 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.229 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.229 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.230 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.230 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.230 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.231 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.231 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.231 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.231 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.231 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.231 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.231 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.231 +02:00 [INF] Sending file. Request path: '/index.css'. Physical path: 'N/A'
2025-03-06 02:20:17.232 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.232 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" completed keep alive response.
2025-03-06 02:20:17.232 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.232 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.232 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/index.css - 200 202 text/css 58.1729ms
2025-03-06 02:20:17.233 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-03-06 02:20:17.233 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" completed keep alive response.
2025-03-06 02:20:17.233 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/swagger-ui-standalone-preset.js - 200 230007 text/javascript 54.0812ms
2025-03-06 02:20:17.396 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/favicon-16x16.png - null null
2025-03-06 02:20:17.397 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.397 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.397 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.398 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.398 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.398 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.398 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.398 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.398 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.401 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.402 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.402 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.402 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.402 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.402 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.402 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.402 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.403 +02:00 [INF] Sending file. Request path: '/favicon-16x16.png'. Physical path: 'N/A'
2025-03-06 02:20:17.403 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" completed keep alive response.
2025-03-06 02:20:17.403 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/favicon-16x16.png - 200 665 image/png 7.4308ms
2025-03-06 02:20:17.439 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/swagger/v1/swagger.json - null null
2025-03-06 02:20:17.441 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 02:20:17.441 +02:00 [DBG] Creating DbConnection.
2025-03-06 02:20:17.441 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 02:20:17.442 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.442 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.443 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 02:20:17.443 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.444 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 02:20:17.444 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.449 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 02:20:17.449 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.449 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 02:20:17.449 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.450 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 02:20:17.450 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 02:20:17.450 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 02:20:17.450 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 02:20:17.458 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-03-06 02:20:17.459 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-03-06 02:20:17.920 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" completed keep alive response.
2025-03-06 02:20:17.921 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 481.3912ms
2025-03-06 02:21:25.598 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" received FIN.
2025-03-06 02:21:25.606 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" accepted.
2025-03-06 02:21:25.607 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" started.
2025-03-06 02:21:25.608 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" accepted.
2025-03-06 02:21:25.609 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" started.
2025-03-06 02:21:25.622 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:21:25.623 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" disconnecting.
2025-03-06 02:21:25.628 +02:00 [DBG] Connection id "0HNAS8ILT3IHU" stopped.
2025-03-06 02:21:25.639 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/ApiScanner/scan - application/json 112
2025-03-06 02:21:25.659 +02:00 [DBG] POST requests are not supported
2025-03-06 02:21:25.733 +02:00 [DBG] 1 candidate(s) found for the request path '/api/ApiScanner/scan'
2025-03-06 02:21:25.734 +02:00 [DBG] Endpoint 'ApiScannerController.ScanApi (APIMonitor.server)' with route pattern 'api/ApiScanner/scan' is valid for the request path '/api/ApiScanner/scan'
2025-03-06 02:21:25.737 +02:00 [DBG] Request matched endpoint 'ApiScannerController.ScanApi (APIMonitor.server)'
2025-03-06 02:21:25.764 +02:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-03-06 02:21:25.769 +02:00 [DBG] Policy authentication schemes  did not succeed
2025-03-06 02:21:25.772 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-03-06 02:21:25.776 +02:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-03-06 02:21:25.777 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" completed keep alive response.
2025-03-06 02:21:25.777 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/ApiScanner/scan - 302 0 null 140.3784ms
2025-03-06 02:21:25.778 +02:00 [DBG] Connection id "0HNAS8ILT3IHV", Request id "0HNAS8ILT3IHV:00000001": started reading request body.
2025-03-06 02:21:25.779 +02:00 [DBG] Connection id "0HNAS8ILT3IHV", Request id "0HNAS8ILT3IHV:00000001": done reading request body.
2025-03-06 02:21:25.781 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/Account/Login?ReturnUrl=%2Fapi%2FApiScanner%2Fscan - null null
2025-03-06 02:21:25.784 +02:00 [DBG] The request path /Account/Login does not match a supported file type
2025-03-06 02:21:25.786 +02:00 [DBG] No candidates found for the request path '/Account/Login'
2025-03-06 02:21:25.786 +02:00 [DBG] Request did not match any endpoints
2025-03-06 02:21:25.789 +02:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-03-06 02:21:25.790 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" completed keep alive response.
2025-03-06 02:21:25.790 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/Account/Login?ReturnUrl=%2Fapi%2FApiScanner%2Fscan - 404 0 null 8.9797ms
2025-03-06 02:21:25.792 +02:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5028/Account/Login, Response status code: 404
2025-03-06 02:22:06.199 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/ApiScanner/scan - application/json 112
2025-03-06 02:22:06.211 +02:00 [DBG] POST requests are not supported
2025-03-06 02:22:06.219 +02:00 [DBG] 1 candidate(s) found for the request path '/api/ApiScanner/scan'
2025-03-06 02:22:06.221 +02:00 [DBG] Endpoint 'ApiScannerController.ScanApi (APIMonitor.server)' with route pattern 'api/ApiScanner/scan' is valid for the request path '/api/ApiScanner/scan'
2025-03-06 02:22:06.222 +02:00 [DBG] Request matched endpoint 'ApiScannerController.ScanApi (APIMonitor.server)'
2025-03-06 02:22:06.236 +02:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-03-06 02:22:06.241 +02:00 [DBG] Policy authentication schemes  did not succeed
2025-03-06 02:22:06.241 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-03-06 02:22:06.242 +02:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2025-03-06 02:22:06.242 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" completed keep alive response.
2025-03-06 02:22:06.242 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/ApiScanner/scan - 302 0 null 44.7086ms
2025-03-06 02:22:06.245 +02:00 [DBG] Connection id "0HNAS8ILT3IHV", Request id "0HNAS8ILT3IHV:00000003": started reading request body.
2025-03-06 02:22:06.245 +02:00 [DBG] Connection id "0HNAS8ILT3IHV", Request id "0HNAS8ILT3IHV:00000003": done reading request body.
2025-03-06 02:22:06.246 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5028/Account/Login?ReturnUrl=%2Fapi%2FApiScanner%2Fscan - null null
2025-03-06 02:22:06.249 +02:00 [DBG] The request path /Account/Login does not match a supported file type
2025-03-06 02:22:06.249 +02:00 [DBG] No candidates found for the request path '/Account/Login'
2025-03-06 02:22:06.249 +02:00 [DBG] Request did not match any endpoints
2025-03-06 02:22:06.250 +02:00 [DBG] AuthenticationScheme: Identity.Application was not authenticated.
2025-03-06 02:22:06.250 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" completed keep alive response.
2025-03-06 02:22:06.250 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5028/Account/Login?ReturnUrl=%2Fapi%2FApiScanner%2Fscan - 404 0 null 4.2944ms
2025-03-06 02:22:06.250 +02:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5028/Account/Login, Response status code: 404
2025-03-06 02:22:12.821 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" received FIN.
2025-03-06 02:22:12.821 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" received FIN.
2025-03-06 02:22:12.821 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" received FIN.
2025-03-06 02:22:12.821 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" received FIN.
2025-03-06 02:22:12.822 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:22:12.822 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:22:12.822 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:22:12.824 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" disconnecting.
2025-03-06 02:22:12.824 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" disconnecting.
2025-03-06 02:22:12.824 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" disconnecting.
2025-03-06 02:22:12.827 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:22:12.827 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" disconnecting.
2025-03-06 02:22:12.831 +02:00 [DBG] Connection id "0HNAS8ILT3IHT" stopped.
2025-03-06 02:22:12.831 +02:00 [DBG] Connection id "0HNAS8ILT3IHQ" stopped.
2025-03-06 02:22:12.831 +02:00 [DBG] Connection id "0HNAS8ILT3IHS" stopped.
2025-03-06 02:22:12.831 +02:00 [DBG] Connection id "0HNAS8ILT3IHP" stopped.
2025-03-06 02:22:13.829 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" received FIN.
2025-03-06 02:22:13.830 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:22:13.830 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" disconnecting.
2025-03-06 02:22:13.830 +02:00 [DBG] Connection id "0HNAS8ILT3IHR" stopped.
2025-03-06 02:24:16.823 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" disconnecting.
2025-03-06 02:24:16.826 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" stopped.
2025-03-06 02:24:16.829 +02:00 [DBG] Connection id "0HNAS8ILT3IHV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 02:24:48.418 +02:00 [INF] Application is shutting down...
2025-03-06 02:24:48.430 +02:00 [DBG] Hosting stopping
2025-03-06 02:24:48.454 +02:00 [DBG] Hosting stopped
2025-03-06 03:07:10.024 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 03:07:10.131 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 03:07:10.564 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 03:07:10.564 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 03:07:10.652 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 03:07:10.779 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:10.863 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 03:07:11.102 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:11.140 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:11.158 +02:00 [DBG] Created DbConnection. (16ms).
2025-03-06 03:07:11.162 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.521 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.524 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:11.529 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-06 03:07:11.536 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-03-06 03:07:11.543 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:11.676 +02:00 [INF] Executed DbCommand (127ms) [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:11.718 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 1}'.
2025-03-06 03:07:11.736 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.742 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 61ms reading results.
2025-03-06 03:07:11.745 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.749 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (4ms).
2025-03-06 03:07:11.752 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.753 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.753 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:11.753 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.754 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.754 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:11.763 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:11.763 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 03:07:11.763 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.763 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:11.764 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.764 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:11.766 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-06 03:07:11.773 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetDateTime(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:11.775 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.775 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.775 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:11.775 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.776 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.776 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:11.781 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:11.801 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'User' entity with key '{Id: 1}'.
2025-03-06 03:07:11.834 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.834 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 53ms reading results.
2025-03-06 03:07:11.835 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.835 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:11.838 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .SingleOrDefault(r => r.NormalizedName == __normalizedRoleName_0)'
2025-03-06 03:07:11.842 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(2) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedRoleName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:11.843 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.843 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.843 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:11.843 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.843 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.843 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:07:11.846 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedRoleName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:07:11.847 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.847 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:11.848 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.848 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:11.856 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<int>>()
    .FirstOrDefault(e => EF.Property<int>(e, "UserId") == __p_0 && EF.Property<int>(e, "RoleId") == __p_1)'
2025-03-06 03:07:11.876 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityUserRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityUserRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<int>.UserId (int) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<int>.RoleId (int) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityUserRole<int>.UserId (int) Required PK FK AfterSave:Throw, 0], [Property: IdentityUserRole<int>.RoleId (int) Required PK FK Index AfterSave:Throw, 1] }
            SELECT TOP(1) a.UserId, a.RoleId
            FROM AspNetUserRoles AS a
            WHERE (a.UserId == @__p_0) && (a.RoleId == @__p_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityUserRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityUserRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityUserRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityUserRole<int>.UserId, IdentityUserRole<int>.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]
                    { 
                        (object)dataReader.GetInt32(0), 
                        (object)dataReader.GetInt32(1) 
                    }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityUserRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityUserRole<int> instance;
                                    instance = new IdentityUserRole<int>();
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(1);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityUserRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityUserRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:11.878 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.879 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.879 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:11.879 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.879 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:11.879 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='1', @__p_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:07:11.882 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='1', @__p_1='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:07:11.888 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityUserRole' entity with key '{UserId: 1, RoleId: 1}'.
2025-03-06 03:07:11.890 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.890 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 8ms reading results.
2025-03-06 03:07:11.890 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.890 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:11.892 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:11.893 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:11.894 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:11.924 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-03-06 03:07:11.993 +02:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-03-06 03:07:12.006 +02:00 [DBG] Hosting starting
2025-03-06 03:07:12.014 +02:00 [DBG] Reading data from file '/home/lyuboslav/.aspnet/DataProtection-Keys/key-3337972f-7582-481c-bfd3-27e1985c4e4c.xml'.
2025-03-06 03:07:12.019 +02:00 [DBG] Found key {3337972f-7582-481c-bfd3-27e1985c4e4c}.
2025-03-06 03:07:12.030 +02:00 [DBG] Considering key {3337972f-7582-481c-bfd3-27e1985c4e4c} with expiration date 2025-04-03 12:22:57Z as default key.
2025-03-06 03:07:12.032 +02:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-03-06 03:07:12.036 +02:00 [DBG] Using managed symmetric algorithm 'System.Security.Cryptography.Aes'.
2025-03-06 03:07:12.036 +02:00 [DBG] Using managed keyed hash algorithm 'System.Security.Cryptography.HMACSHA256'.
2025-03-06 03:07:12.039 +02:00 [DBG] Using key {3337972f-7582-481c-bfd3-27e1985c4e4c} as the default key.
2025-03-06 03:07:12.039 +02:00 [DBG] Key ring with default key {3337972f-7582-481c-bfd3-27e1985c4e4c} was loaded during application startup.
2025-03-06 03:07:12.067 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-03-06 03:07:12.067 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-03-06 03:07:12.141 +02:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert
2025-03-06 03:07:12.147 +02:00 [INF] Now listening on: https://localhost:7074
2025-03-06 03:07:12.147 +02:00 [INF] Now listening on: http://localhost:5028
2025-03-06 03:07:12.147 +02:00 [DBG] Loaded hosting startup assembly APIMonitor.server
2025-03-06 03:07:12.147 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-06 03:07:12.147 +02:00 [INF] Hosting environment: Development
2025-03-06 03:07:12.147 +02:00 [INF] Content root path: /home/lyuboslav/Desktop/APIMonitor/APIMonitor.server
2025-03-06 03:07:12.148 +02:00 [DBG] Hosting started
2025-03-06 03:07:15.788 +02:00 [DBG] Connection id "0HNAS9CU2B360" accepted.
2025-03-06 03:07:15.789 +02:00 [DBG] Connection id "0HNAS9CU2B360" started.
2025-03-06 03:07:15.815 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/Login/login - application/json 75
2025-03-06 03:07:15.871 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:15.872 +02:00 [DBG] Compiling query expression: 
'DbSet<IpBlock>()
    .FirstOrDefault(ip => ip.Ip == __ipAddress_0)'
2025-03-06 03:07:15.877 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IpBlock>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IpBlock>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IpBlock.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IpBlock.BlockedUntil (DateTime) Required, 1], [Property: IpBlock.FailedAttempts (int) Required, 2], [Property: IpBlock.Ip (string) Required MaxLength(15), 3], [Property: IpBlock.Reason (string) Required MaxLength(200), 4] }
            SELECT TOP(1) i.Id, i.BlockedUntil, i.FailedAttempts, i.Ip, i.Reason
            FROM IpBlocks AS i
            WHERE i.Ip == @__ipAddress_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IpBlock.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IpBlock.BlockedUntil (DateTime) Required, 1], [Property: IpBlock.FailedAttempts (int) Required, 2], [Property: IpBlock.Ip (string) Required MaxLength(15), 3], [Property: IpBlock.Reason (string) Required MaxLength(200), 4] }
            SELECT TOP(1) i.Id, i.BlockedUntil, i.FailedAttempts, i.Ip, i.Reason
            FROM IpBlocks AS i
            WHERE i.Ip == @__ipAddress_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IpBlock entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IpBlock instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IpBlock);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IpBlock.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IpBlock)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")]: 
                            {
                                return 
                                {
                                    IpBlock instance;
                                    instance = new IpBlock();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<BlockedUntil>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<FailedAttempts>k__BackingField = dataReader.GetInt32(2);
                                    instance.<Ip>k__BackingField = dataReader.GetString(3);
                                    instance.<Reason>k__BackingField = dataReader.GetString(4);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IpBlock | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Models.IpBlock")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IpBlock)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:15.879 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:15.879 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:07:15.879 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.880 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.880 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:15.880 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:15.880 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:15.880 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:07:15.883 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:07:15.884 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.884 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:15.884 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.884 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:15.885 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:15.885 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.885 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:15.905 +02:00 [DBG] POST requests are not supported
2025-03-06 03:07:15.937 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Login/login'
2025-03-06 03:07:15.938 +02:00 [DBG] Endpoint 'APIMonitor.server.Identity.Controllers.LoginController.Login (APIMonitor.server)' with route pattern 'api/Login/login' is valid for the request path '/api/Login/login'
2025-03-06 03:07:15.938 +02:00 [DBG] Request matched endpoint 'APIMonitor.server.Identity.Controllers.LoginController.Login (APIMonitor.server)'
2025-03-06 03:07:15.940 +02:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-06 03:07:15.940 +02:00 [INF] CORS policy execution successful.
2025-03-06 03:07:15.969 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:15.971 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-03-06 03:07:15.977 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetDateTime(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:15.979 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:15.980 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:07:15.980 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.980 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.980 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:15.980 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:15.980 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:15.980 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-03-06 03:07:15.985 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2025-03-06 03:07:15.985 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'User' entity with key '{Id: 2}'.
2025-03-06 03:07:15.985 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.986 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:15.986 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:15.986 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:15.996 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserClaim<int>>()
    .Where(uc => uc.UserId.Equals(__user_Id_0))
    .Select(c => c.ToClaim())'
2025-03-06 03:07:16.021 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<int>.ClaimType (string), 1], [Property: IdentityUserClaim<int>.ClaimValue (string), 2], [Property: IdentityUserClaim<int>.UserId (int) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: IdentityUserClaim<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityUserClaim<int>.ClaimType (string), 1], [Property: IdentityUserClaim<int>.ClaimValue (string), 2], [Property: IdentityUserClaim<int>.UserId (int) Required FK Index, 3] }
        SELECT a.Id, a.ClaimType, a.ClaimValue, a.UserId
        FROM AspNetUserClaims AS a
        WHERE a.UserId == @__user_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityUserClaim<int> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityUserClaim<int> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityUserClaim<int>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityUserClaim<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityUserClaim<int>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityUserClaim<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityUserClaim<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>")]: 
                        {
                            return 
                            {
                                IdentityUserClaim<int> instance;
                                instance = new IdentityUserClaim<int>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ClaimType>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<ClaimValue>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityUserClaim<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityUserClaim<int>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity.ToClaim();
    }, 
    contextType: APIMonitor.server.Data.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-06 03:07:16.023 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.024 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.024 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.024 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.024 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.024 +02:00 [DBG] Executing DbCommand [Parameters=[@__user_Id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2025-03-06 03:07:16.027 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2025-03-06 03:07:16.028 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.029 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 1ms reading results.
2025-03-06 03:07:16.029 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.029 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.038 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityUserRole<int>>()
    .Join(
        inner: DbSet<IdentityRole<int>>(), 
        outerKeySelector: userRole => userRole.RoleId, 
        innerKeySelector: role => role.Id, 
        resultSelector: (userRole, role) => new { 
            userRole = userRole, 
            role = role
         })
    .Where(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.userRole.UserId.Equals(__userId_0))
    .Select(<>h__TransparentIdentifier0 => <>h__TransparentIdentifier0.role.Name)'
2025-03-06 03:07:16.053 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<string>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT a0.Name
        FROM AspNetUserRoles AS a
        INNER JOIN AspNetRoles AS a0 ON a.RoleId == a0.Id
        WHERE a.UserId == @__userId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        return value1;
    }, 
    contextType: APIMonitor.server.Data.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-06 03:07:16.055 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.056 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.056 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.056 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.056 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.056 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-03-06 03:07:16.060 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2025-03-06 03:07:16.061 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.061 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.061 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.061 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.063 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.063 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.064 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.064 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.064 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.064 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:16.067 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 03:07:16.068 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 03:07:16.068 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.068 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.068 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.068 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.073 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRoleClaim<int>>()
    .Where(rc => rc.RoleId.Equals(__role_Id_0))
    .Select(c => new Claim(
        c.ClaimType, 
        c.ClaimValue
    ))'
2025-03-06 03:07:16.077 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Claim>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> 0
            1 -> 1
        SELECT a.ClaimType, a.ClaimValue
        FROM AspNetRoleClaims AS a
        WHERE a.RoleId == @__role_Id_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> 0
            1 -> 1
        SELECT a.ClaimType, a.ClaimValue
        FROM AspNetRoleClaims AS a
        WHERE a.RoleId == @__role_Id_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        string value1;
        string value2;
        value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
        value2 = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
        return new Claim(
            value1, 
            value2
        );
    }, 
    contextType: APIMonitor.server.Data.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-06 03:07:16.079 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.079 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.079 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.079 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.079 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.079 +02:00 [DBG] Executing DbCommand [Parameters=[@__role_Id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE [a].[RoleId] = @__role_Id_0
2025-03-06 03:07:16.083 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__role_Id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE [a].[RoleId] = @__role_Id_0
2025-03-06 03:07:16.084 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.084 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.084 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.084 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.089 +02:00 [DBG] AuthenticationScheme: Identity.Application was successfully authenticated.
2025-03-06 03:07:16.092 +02:00 [INF] Executing endpoint 'APIMonitor.server.Identity.Controllers.LoginController.Login (APIMonitor.server)'
2025-03-06 03:07:16.107 +02:00 [INF] Route matched with {action = "Login", controller = "Login"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(APIMonitor.server.ViewModels.LoginViewModel) on controller APIMonitor.server.Identity.Controllers.LoginController (APIMonitor.server).
2025-03-06 03:07:16.109 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-06 03:07:16.109 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-06 03:07:16.109 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-06 03:07:16.109 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-06 03:07:16.110 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-06 03:07:16.111 +02:00 [DBG] Executing controller factory for controller APIMonitor.server.Identity.Controllers.LoginController (APIMonitor.server)
2025-03-06 03:07:16.120 +02:00 [DBG] Executed controller factory for controller APIMonitor.server.Identity.Controllers.LoginController (APIMonitor.server)
2025-03-06 03:07:16.124 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel' ...
2025-03-06 03:07:16.126 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel' using the name '' in request data ...
2025-03-06 03:07:16.126 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-06 03:07:16.151 +02:00 [DBG] Connection id "0HNAS9CU2B360", Request id "0HNAS9CU2B360:00000001": started reading request body.
2025-03-06 03:07:16.152 +02:00 [DBG] Connection id "0HNAS9CU2B360", Request id "0HNAS9CU2B360:00000001": done reading request body.
2025-03-06 03:07:16.159 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'APIMonitor.server.ViewModels.LoginViewModel'
2025-03-06 03:07:16.160 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel'.
2025-03-06 03:07:16.160 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel'.
2025-03-06 03:07:16.160 +02:00 [DBG] Attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel' ...
2025-03-06 03:07:16.165 +02:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.LoginViewModel'.
2025-03-06 03:07:16.170 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.170 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.170 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.170 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.170 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.170 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:16.174 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:16.174 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'User' entity with key '{Id: 1}'.
2025-03-06 03:07:16.174 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.175 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.175 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.175 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.258 +02:00 [DBG] Invalid password for user.
2025-03-06 03:07:16.258 +02:00 [DBG] User failed to provide the correct password.
2025-03-06 03:07:16.262 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .FirstOrDefault(u => u.NormalizedUserName == __normalizedUserName_0)'
2025-03-06 03:07:16.267 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTime) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(1) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedUserName == @__normalizedUserName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetDateTime(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 03:07:16.269 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.270 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.270 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.270 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.270 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.270 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='LYUBOSLAV' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:07:16.274 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='LYUBOSLAV' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:07:16.274 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.274 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.274 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.274 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.277 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.277 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.277 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.277 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.277 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.277 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:16.281 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:07:16.281 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.281 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.281 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.281 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.294 +02:00 [DBG] The 'User' entity with key '{Id: 1}' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'.
2025-03-06 03:07:16.297 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.298 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.328 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:07:16.382 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.382 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.385 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.385 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.385 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.386 +02:00 [DBG] Executing DbCommand [Parameters=[@p23='1', @p0='4', @p1='290c58d0-25a0-4025-8f3e-9d36dfa0e51b' (Size = 4000), @p24='74997aea-d535-4f3a-a0c4-fb8d5829a6ba' (Size = 4000), @p2='2025-03-05T04:38:41.7970143', @p3='lyuboslavSSS@proton.me' (Size = 256), @p4='True', @p5='0', @p6=NULL (Size = 50), @p7='True', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYUBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYUBOSLAV' (Size = 256), @p14='AQAAAAIAAYagAAAAEJBK2o8dHlpdYRt22Jc5uAm7hhvcJtr+6oAD8rE6xJoNaTqbPas36WM0zhf433q+eQ==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17=NULL (Size = 500), @p18='0001-01-01T00:00:00.0000000', @p19='False', @p20='YZUCDHFWFEWZPTOET7GBC63YAVYP2EB6' (Size = 4000), @p21='False', @p22='lyuboslav' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedAt] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FailedLoginAttempts] = @p5, [FirstName] = @p6, [IsAdmin] = @p7, [IsLockedOut] = @p8, [LastName] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [NormalizedEmail] = @p12, [NormalizedUserName] = @p13, [PasswordHash] = @p14, [PhoneNumber] = @p15, [PhoneNumberConfirmed] = @p16, [RefreshToken] = @p17, [RefreshTokenExpiry] = @p18, [RememberMe] = @p19, [SecurityStamp] = @p20, [TwoFactorEnabled] = @p21, [UserName] = @p22
OUTPUT 1
WHERE [Id] = @p23 AND [ConcurrencyStamp] = @p24;
2025-03-06 03:07:16.400 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[@p23='1', @p0='4', @p1='290c58d0-25a0-4025-8f3e-9d36dfa0e51b' (Size = 4000), @p24='74997aea-d535-4f3a-a0c4-fb8d5829a6ba' (Size = 4000), @p2='2025-03-05T04:38:41.7970143', @p3='lyuboslavSSS@proton.me' (Size = 256), @p4='True', @p5='0', @p6=NULL (Size = 50), @p7='True', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYUBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYUBOSLAV' (Size = 256), @p14='AQAAAAIAAYagAAAAEJBK2o8dHlpdYRt22Jc5uAm7hhvcJtr+6oAD8rE6xJoNaTqbPas36WM0zhf433q+eQ==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17=NULL (Size = 500), @p18='0001-01-01T00:00:00.0000000', @p19='False', @p20='YZUCDHFWFEWZPTOET7GBC63YAVYP2EB6' (Size = 4000), @p21='False', @p22='lyuboslav' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedAt] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FailedLoginAttempts] = @p5, [FirstName] = @p6, [IsAdmin] = @p7, [IsLockedOut] = @p8, [LastName] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [NormalizedEmail] = @p12, [NormalizedUserName] = @p13, [PasswordHash] = @p14, [PhoneNumber] = @p15, [PhoneNumberConfirmed] = @p16, [RefreshToken] = @p17, [RefreshTokenExpiry] = @p18, [RememberMe] = @p19, [SecurityStamp] = @p20, [TwoFactorEnabled] = @p21, [UserName] = @p22
OUTPUT 1
WHERE [Id] = @p23 AND [ConcurrencyStamp] = @p24;
2025-03-06 03:07:16.405 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.405 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 4ms reading results.
2025-03-06 03:07:16.406 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.406 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.409 +02:00 [DBG] The 'User' entity with key '{Id: 1}' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'.
2025-03-06 03:07:16.410 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:07:16.432 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482647' for the property 'AuditLog.Id'.
2025-03-06 03:07:16.453 +02:00 [DBG] The navigation 'AuditLog.User' for entity with key '{Id: -2147482647}' was detected as changed.
2025-03-06 03:07:16.461 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482647}'.
2025-03-06 03:07:16.462 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.462 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.470 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:07:16.481 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.482 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.482 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.482 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.482 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.482 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='LoginFailed' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:16.4140276Z', @p2='Failed login attempt for lyuboslavSSS@proton.me.' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:16.1697532Z', @p6='243', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:16.491 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='LoginFailed' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:16.4140276Z', @p2='Failed login attempt for lyuboslavSSS@proton.me.' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:16.1697532Z', @p6='243', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:16.499 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482647' to '245' for entity with key '{Id: 245}'.
2025-03-06 03:07:16.502 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.503 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 10ms reading results.
2025-03-06 03:07:16.503 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.503 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.505 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 245}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:07:16.505 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:07:16.508 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-06 03:07:16.509 +02:00 [DBG] No information found on request to perform content negotiation.
2025-03-06 03:07:16.509 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-06 03:07:16.509 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-06 03:07:16.510 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-06 03:07:16.510 +02:00 [INF] Executing UnauthorizedObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-06 03:07:16.526 +02:00 [INF] Executed action APIMonitor.server.Identity.Controllers.LoginController.Login (APIMonitor.server) in 413.1248ms
2025-03-06 03:07:16.531 +02:00 [INF] Executed endpoint 'APIMonitor.server.Identity.Controllers.LoginController.Login (APIMonitor.server)'
2025-03-06 03:07:16.533 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:16.534 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482646' for the property 'AuditLog.Id'.
2025-03-06 03:07:16.535 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482646}'.
2025-03-06 03:07:16.535 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.535 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:16.535 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:07:16.536 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:16.536 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:07:16.536 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.536 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.536 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:16.536 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.536 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:16.536 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='POST /api/Login/login' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:16.5327101Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:15.8185712Z', @p6='714', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:16.541 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='POST /api/Login/login' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:16.5327101Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:15.8185712Z', @p6='714', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:16.541 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482646' to '246' for entity with key '{Id: 246}'.
2025-03-06 03:07:16.542 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.542 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:16.542 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.542 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:16.542 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 246}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:07:16.542 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:07:16.542 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:16.543 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.543 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:16.544 +02:00 [DBG] Connection id "0HNAS9CU2B360" completed keep alive response.
2025-03-06 03:07:16.545 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:16.547 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:16.548 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:16.548 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/Login/login - 401 null application/json; charset=utf-8 734.6276ms
2025-03-06 03:07:46.511 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/Register/register - application/json 116
2025-03-06 03:07:46.516 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:46.517 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:46.517 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:07:46.517 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.517 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.518 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:46.518 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:46.518 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:46.518 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:07:46.520 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:07:46.520 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.521 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:46.521 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.521 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:46.521 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:46.521 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.521 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:46.522 +02:00 [DBG] POST requests are not supported
2025-03-06 03:07:46.524 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Register/register'
2025-03-06 03:07:46.524 +02:00 [DBG] Endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)' with route pattern 'api/Register/register' is valid for the request path '/api/Register/register'
2025-03-06 03:07:46.524 +02:00 [DBG] Request matched endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:07:46.525 +02:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-06 03:07:46.525 +02:00 [INF] CORS policy execution successful.
2025-03-06 03:07:46.528 +02:00 [DBG] AuthenticationScheme: Identity.Application was successfully authenticated.
2025-03-06 03:07:46.528 +02:00 [INF] Executing endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:07:46.532 +02:00 [INF] Route matched with {action = "Register", controller = "Register"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(APIMonitor.server.ViewModels.RegisterViewModel) on controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server).
2025-03-06 03:07:46.532 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-06 03:07:46.532 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-06 03:07:46.532 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-06 03:07:46.532 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-06 03:07:46.532 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-06 03:07:46.532 +02:00 [DBG] Executing controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:07:46.534 +02:00 [DBG] Executed controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:07:46.535 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:07:46.535 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' using the name '' in request data ...
2025-03-06 03:07:46.535 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-06 03:07:46.537 +02:00 [DBG] Connection id "0HNAS9CU2B360", Request id "0HNAS9CU2B360:00000002": started reading request body.
2025-03-06 03:07:46.537 +02:00 [DBG] Connection id "0HNAS9CU2B360", Request id "0HNAS9CU2B360:00000002": done reading request body.
2025-03-06 03:07:46.539 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'APIMonitor.server.ViewModels.RegisterViewModel'
2025-03-06 03:07:46.539 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:07:46.539 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:07:46.539 +02:00 [DBG] Attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:07:46.546 +02:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:07:46.547 +02:00 [DBG] The request has model state errors, returning an error response.
2025-03-06 03:07:46.547 +02:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-06 03:07:46.548 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-06 03:07:46.548 +02:00 [DBG] No information found on request to perform content negotiation.
2025-03-06 03:07:46.548 +02:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-06 03:07:46.548 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-06 03:07:46.549 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-06 03:07:46.570 +02:00 [INF] Executed action APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server) in 37.6073ms
2025-03-06 03:07:46.570 +02:00 [INF] Executed endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:07:46.580 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:07:46.580 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482645' for the property 'AuditLog.Id'.
2025-03-06 03:07:46.580 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482645}'.
2025-03-06 03:07:46.580 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:46.581 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:07:46.581 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:07:46.581 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:07:46.581 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:07:46.581 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.582 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.582 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:07:46.582 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:46.582 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:07:46.582 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:46.5793774Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:46.5117430Z', @p6='67', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:46.586 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:07:46.5793774Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:07:46.5117430Z', @p6='67', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:07:46.586 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482645' to '247' for entity with key '{Id: 247}'.
2025-03-06 03:07:46.587 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.587 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:07:46.587 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.587 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:07:46.587 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 247}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:07:46.587 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:07:46.587 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:07:46.588 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:07:46.588 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:07:46.588 +02:00 [DBG] Connection id "0HNAS9CU2B360" completed keep alive response.
2025-03-06 03:07:46.588 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/Register/register - 400 null application/problem+json; charset=utf-8 77.3288ms
2025-03-06 03:09:42.230 +02:00 [DBG] Connection id "0HNAS9CU2B360" received FIN.
2025-03-06 03:09:42.263 +02:00 [DBG] Connection id "0HNAS9CU2B360" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 03:09:42.276 +02:00 [DBG] Connection id "0HNAS9CU2B360" disconnecting.
2025-03-06 03:09:42.281 +02:00 [DBG] Connection id "0HNAS9CU2B360" stopped.
2025-03-06 03:16:25.272 +02:00 [DBG] Connection id "0HNAS9CU2B361" accepted.
2025-03-06 03:16:25.272 +02:00 [DBG] Connection id "0HNAS9CU2B361" started.
2025-03-06 03:16:25.279 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/Register/register - application/json 116
2025-03-06 03:16:25.287 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:16:25.288 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:16:25.290 +02:00 [DBG] Created DbConnection. (2ms).
2025-03-06 03:16:25.290 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.441 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.441 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:16:25.441 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:16:25.441 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:16:25.442 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:16:25.505 +02:00 [INF] Executed DbCommand (64ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:16:25.506 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.506 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:16:25.506 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.506 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:16:25.506 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:16:25.506 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.507 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:16:25.509 +02:00 [DBG] POST requests are not supported
2025-03-06 03:16:25.511 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Register/register'
2025-03-06 03:16:25.511 +02:00 [DBG] Endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)' with route pattern 'api/Register/register' is valid for the request path '/api/Register/register'
2025-03-06 03:16:25.511 +02:00 [DBG] Request matched endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:16:25.513 +02:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-06 03:16:25.513 +02:00 [INF] CORS policy execution successful.
2025-03-06 03:16:25.537 +02:00 [DBG] AuthenticationScheme: Identity.Application was successfully authenticated.
2025-03-06 03:16:25.538 +02:00 [INF] Executing endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:16:25.546 +02:00 [INF] Route matched with {action = "Register", controller = "Register"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(APIMonitor.server.ViewModels.RegisterViewModel) on controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server).
2025-03-06 03:16:25.546 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-06 03:16:25.547 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-06 03:16:25.547 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-06 03:16:25.547 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-06 03:16:25.547 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-06 03:16:25.547 +02:00 [DBG] Executing controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:16:25.550 +02:00 [DBG] Executed controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:16:25.551 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:16:25.551 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' using the name '' in request data ...
2025-03-06 03:16:25.551 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-06 03:16:25.553 +02:00 [DBG] Connection id "0HNAS9CU2B361", Request id "0HNAS9CU2B361:00000001": started reading request body.
2025-03-06 03:16:25.553 +02:00 [DBG] Connection id "0HNAS9CU2B361", Request id "0HNAS9CU2B361:00000001": done reading request body.
2025-03-06 03:16:25.554 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'APIMonitor.server.ViewModels.RegisterViewModel'
2025-03-06 03:16:25.554 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:16:25.554 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:16:25.554 +02:00 [DBG] Attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:16:25.558 +02:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:16:25.558 +02:00 [DBG] The request has model state errors, returning an error response.
2025-03-06 03:16:25.559 +02:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-06 03:16:25.560 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-06 03:16:25.560 +02:00 [DBG] No information found on request to perform content negotiation.
2025-03-06 03:16:25.560 +02:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-06 03:16:25.560 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-06 03:16:25.560 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-06 03:16:25.562 +02:00 [INF] Executed action APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server) in 14.2933ms
2025-03-06 03:16:25.562 +02:00 [INF] Executed endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:16:25.562 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:16:25.562 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482644' for the property 'AuditLog.Id'.
2025-03-06 03:16:25.563 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482644}'.
2025-03-06 03:16:25.563 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:16:25.563 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:16:25.563 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:16:25.564 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:16:25.564 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:16:25.565 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.565 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.565 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:16:25.565 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:16:25.565 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:16:25.565 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:16:25.5623348Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:16:25.2802590Z', @p6='282', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:16:25.594 +02:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:16:25.5623348Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:16:25.2802590Z', @p6='282', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:16:25.594 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482644' to '248' for entity with key '{Id: 248}'.
2025-03-06 03:16:25.595 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.595 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:16:25.595 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.595 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:16:25.595 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 248}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:16:25.595 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:16:25.595 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:16:25.595 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:16:25.595 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:16:25.595 +02:00 [DBG] Connection id "0HNAS9CU2B361" completed keep alive response.
2025-03-06 03:16:25.596 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/Register/register - 400 null application/problem+json; charset=utf-8 316.8029ms
2025-03-06 03:18:21.528 +02:00 [DBG] Connection id "0HNAS9CU2B361" received FIN.
2025-03-06 03:18:21.528 +02:00 [DBG] Connection id "0HNAS9CU2B361" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 03:18:21.529 +02:00 [DBG] Connection id "0HNAS9CU2B361" disconnecting.
2025-03-06 03:18:21.529 +02:00 [DBG] Connection id "0HNAS9CU2B361" stopped.
2025-03-06 03:18:22.785 +02:00 [DBG] Connection id "0HNAS9CU2B362" accepted.
2025-03-06 03:18:22.785 +02:00 [DBG] Connection id "0HNAS9CU2B362" started.
2025-03-06 03:18:22.786 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/Register/register - application/json 110
2025-03-06 03:18:22.787 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:18:22.787 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:18:22.787 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:18:22.787 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.787 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.787 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:18:22.787 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:18:22.788 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:18:22.788 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:18:22.791 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:18:22.791 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.791 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:18:22.791 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.791 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:18:22.791 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:18:22.791 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.792 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:18:22.792 +02:00 [DBG] POST requests are not supported
2025-03-06 03:18:22.792 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Register/register'
2025-03-06 03:18:22.792 +02:00 [DBG] Endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)' with route pattern 'api/Register/register' is valid for the request path '/api/Register/register'
2025-03-06 03:18:22.792 +02:00 [DBG] Request matched endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:18:22.792 +02:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-06 03:18:22.792 +02:00 [INF] CORS policy execution successful.
2025-03-06 03:18:22.793 +02:00 [DBG] AuthenticationScheme: Identity.Application was successfully authenticated.
2025-03-06 03:18:22.793 +02:00 [INF] Executing endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:18:22.793 +02:00 [INF] Route matched with {action = "Register", controller = "Register"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(APIMonitor.server.ViewModels.RegisterViewModel) on controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server).
2025-03-06 03:18:22.793 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-06 03:18:22.793 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-06 03:18:22.794 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-06 03:18:22.794 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-06 03:18:22.794 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-06 03:18:22.794 +02:00 [DBG] Executing controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:18:22.795 +02:00 [DBG] Executed controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:18:22.795 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:18:22.796 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' using the name '' in request data ...
2025-03-06 03:18:22.796 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-06 03:18:22.796 +02:00 [DBG] Connection id "0HNAS9CU2B362", Request id "0HNAS9CU2B362:00000001": started reading request body.
2025-03-06 03:18:22.796 +02:00 [DBG] Connection id "0HNAS9CU2B362", Request id "0HNAS9CU2B362:00000001": done reading request body.
2025-03-06 03:18:22.796 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'APIMonitor.server.ViewModels.RegisterViewModel'
2025-03-06 03:18:22.796 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:18:22.796 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:18:22.796 +02:00 [DBG] Attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:18:22.797 +02:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:18:22.797 +02:00 [DBG] The request has model state errors, returning an error response.
2025-03-06 03:18:22.797 +02:00 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-03-06 03:18:22.797 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-06 03:18:22.797 +02:00 [DBG] No information found on request to perform content negotiation.
2025-03-06 03:18:22.797 +02:00 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-03-06 03:18:22.797 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-03-06 03:18:22.797 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-03-06 03:18:22.798 +02:00 [INF] Executed action APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server) in 3.2577ms
2025-03-06 03:18:22.798 +02:00 [INF] Executed endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:18:22.799 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:18:22.799 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482643' for the property 'AuditLog.Id'.
2025-03-06 03:18:22.799 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482643}'.
2025-03-06 03:18:22.799 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:18:22.799 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:18:22.799 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:18:22.800 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:18:22.800 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:18:22.800 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.800 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.800 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:18:22.800 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:18:22.800 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:18:22.800 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:18:22.7984524Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:18:22.7864744Z', @p6='11', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:18:22.808 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:18:22.7984524Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:18:22.7864744Z', @p6='11', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:18:22.808 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482643' to '249' for entity with key '{Id: 249}'.
2025-03-06 03:18:22.808 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.809 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:18:22.809 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.809 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:18:22.809 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 249}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:18:22.809 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:18:22.809 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:18:22.809 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:18:22.809 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:18:22.809 +02:00 [DBG] Connection id "0HNAS9CU2B362" completed keep alive response.
2025-03-06 03:18:22.809 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/Register/register - 400 null application/problem+json; charset=utf-8 23.5174ms
2025-03-06 03:20:18.549 +02:00 [DBG] Connection id "0HNAS9CU2B362" received FIN.
2025-03-06 03:20:18.549 +02:00 [DBG] Connection id "0HNAS9CU2B362" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 03:20:18.550 +02:00 [DBG] Connection id "0HNAS9CU2B362" disconnecting.
2025-03-06 03:20:18.550 +02:00 [DBG] Connection id "0HNAS9CU2B362" stopped.
2025-03-06 03:21:26.482 +02:00 [DBG] Connection id "0HNAS9CU2B363" accepted.
2025-03-06 03:21:26.482 +02:00 [DBG] Connection id "0HNAS9CU2B363" started.
2025-03-06 03:21:26.483 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5028/api/Register/register - application/json 106
2025-03-06 03:21:26.484 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:21:26.485 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:21:26.485 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:21:26.485 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.485 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.485 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.485 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.485 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.485 +02:00 [DBG] Executing DbCommand [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:21:26.489 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ipAddress_0='127.0.0.1' (Size = 15)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[BlockedUntil], [i].[FailedAttempts], [i].[Ip], [i].[Reason]
FROM [IpBlocks] AS [i]
WHERE [i].[Ip] = @__ipAddress_0
2025-03-06 03:21:26.489 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.489 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.489 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.489 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.489 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:21:26.489 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.489 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:21:26.489 +02:00 [DBG] POST requests are not supported
2025-03-06 03:21:26.489 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Register/register'
2025-03-06 03:21:26.490 +02:00 [DBG] Endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)' with route pattern 'api/Register/register' is valid for the request path '/api/Register/register'
2025-03-06 03:21:26.490 +02:00 [DBG] Request matched endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:21:26.490 +02:00 [DBG] The request has an origin header: 'http://localhost:5173'.
2025-03-06 03:21:26.490 +02:00 [INF] CORS policy execution successful.
2025-03-06 03:21:26.490 +02:00 [DBG] AuthenticationScheme: Identity.Application was successfully authenticated.
2025-03-06 03:21:26.490 +02:00 [INF] Executing endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:21:26.491 +02:00 [INF] Route matched with {action = "Register", controller = "Register"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(APIMonitor.server.ViewModels.RegisterViewModel) on controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server).
2025-03-06 03:21:26.491 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-03-06 03:21:26.491 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-03-06 03:21:26.491 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-03-06 03:21:26.491 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-03-06 03:21:26.491 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-03-06 03:21:26.491 +02:00 [DBG] Executing controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:21:26.491 +02:00 [DBG] Executed controller factory for controller APIMonitor.server.Identity.Controllers.RegisterController (APIMonitor.server)
2025-03-06 03:21:26.491 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:21:26.491 +02:00 [DBG] Attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' using the name '' in request data ...
2025-03-06 03:21:26.491 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-03-06 03:21:26.491 +02:00 [DBG] Connection id "0HNAS9CU2B363", Request id "0HNAS9CU2B363:00000001": started reading request body.
2025-03-06 03:21:26.491 +02:00 [DBG] Connection id "0HNAS9CU2B363", Request id "0HNAS9CU2B363:00000001": done reading request body.
2025-03-06 03:21:26.492 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'APIMonitor.server.ViewModels.RegisterViewModel'
2025-03-06 03:21:26.492 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:21:26.492 +02:00 [DBG] Done attempting to bind parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:21:26.492 +02:00 [DBG] Attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel' ...
2025-03-06 03:21:26.492 +02:00 [DBG] Done attempting to validate the bound parameter 'model' of type 'APIMonitor.server.ViewModels.RegisterViewModel'.
2025-03-06 03:21:26.498 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:21:26.499 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:21:26.499 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:21:26.499 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.499 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.499 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.499 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.499 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.499 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.511 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.511 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.511 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.512 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.512 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.594 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.594 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.594 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.594 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.594 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.594 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.598 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.598 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.598 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.598 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.598 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.599 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.599 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.599 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.599 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.599 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.599 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.600 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.600 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.600 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.600 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.600 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.604 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482647' for the property 'User.Id'.
2025-03-06 03:21:26.608 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'User' entity with key '{Id: -2147482647}'.
2025-03-06 03:21:26.608 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.608 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.608 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:21:26.609 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.610 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.610 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.610 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.610 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.610 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='0', @p1='d5497dec-595b-4104-ab68-f4a7f2b874fa' (Size = 4000), @p2='2025-03-06T01:21:26.5122906Z', @p3='lyboslavSSS@proton.me' (Size = 256), @p4='False', @p5='0', @p6=NULL (Size = 50), @p7='False', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p14='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17=NULL (Size = 500), @p18='0001-01-01T00:00:00.0000000', @p19='True', @p20='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p21='False', @p22='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([AccessFailedCount], [ConcurrencyStamp], [CreatedAt], [Email], [EmailConfirmed], [FailedLoginAttempts], [FirstName], [IsAdmin], [IsLockedOut], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [RefreshToken], [RefreshTokenExpiry], [RememberMe], [SecurityStamp], [TwoFactorEnabled], [UserName])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22);
2025-03-06 03:21:26.623 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='0', @p1='d5497dec-595b-4104-ab68-f4a7f2b874fa' (Size = 4000), @p2='2025-03-06T01:21:26.5122906Z', @p3='lyboslavSSS@proton.me' (Size = 256), @p4='False', @p5='0', @p6=NULL (Size = 50), @p7='False', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p14='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17=NULL (Size = 500), @p18='0001-01-01T00:00:00.0000000', @p19='True', @p20='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p21='False', @p22='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([AccessFailedCount], [ConcurrencyStamp], [CreatedAt], [Email], [EmailConfirmed], [FailedLoginAttempts], [FirstName], [IsAdmin], [IsLockedOut], [LastName], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [RefreshToken], [RefreshTokenExpiry], [RememberMe], [SecurityStamp], [TwoFactorEnabled], [UserName])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22);
2025-03-06 03:21:26.625 +02:00 [DBG] The foreign key property 'User.Id' was detected as changed from '-2147482647' to '3' for entity with key '{Id: 3}'.
2025-03-06 03:21:26.626 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.626 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 3ms reading results.
2025-03-06 03:21:26.626 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.626 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.627 +02:00 [DBG] The 'User' entity with key '{Id: 3}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:21:26.628 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:21:26.629 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.629 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.629 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.629 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.630 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.630 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.632 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.632 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 03:21:26.632 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.632 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.632 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.633 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.636 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.636 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.637 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.637 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.637 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.637 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='3', @__p_1='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:21:26.638 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='3', @__p_1='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:21:26.638 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.638 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.639 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.639 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.639 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482642' for the property 'AuditLog.Id'.
2025-03-06 03:21:26.639 +02:00 [DBG] The navigation 'AuditLog.User' for entity with key '{Id: -2147482642}' was detected as changed.
2025-03-06 03:21:26.639 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482642}'.
2025-03-06 03:21:26.639 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.639 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.640 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:21:26.640 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.640 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.640 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.640 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.640 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.640 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='Register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:21:26.6392472Z', @p2='User lyboslavSSS@proton.me registered.' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:21:26.4983216Z', @p6='140', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='3'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:21:26.644 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='Register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:21:26.6392472Z', @p2='User lyboslavSSS@proton.me registered.' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:21:26.4983216Z', @p6='140', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='3'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:21:26.645 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482642' to '250' for entity with key '{Id: 250}'.
2025-03-06 03:21:26.645 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.645 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.645 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.645 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.645 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 250}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:21:26.645 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:21:26.651 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()'
2025-03-06 03:21:26.660 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<IdentityRole<int>>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
        SELECT a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
        FROM AspNetRoles AS a) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
        SELECT a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
        FROM AspNetRoles AS a, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        IdentityRole<int> entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            IdentityRole<int> instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(IdentityRole<int>);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (IdentityRole<int>)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                        {
                            return 
                            {
                                IdentityRole<int> instance;
                                instance = new IdentityRole<int>();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(IdentityRole<int>)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: APIMonitor.server.Data.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-03-06 03:21:26.661 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.661 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.661 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.661 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.661 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.661 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
2025-03-06 03:21:26.663 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
2025-03-06 03:21:26.664 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 1}'.
2025-03-06 03:21:26.664 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.664 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.664 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.664 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.665 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.665 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.665 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.665 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.665 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.665 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.666 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.666 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.667 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.667 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.667 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.667 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.667 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.667 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.668 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.668 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.668 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='3', @__p_1='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:21:26.668 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='3', @__p_1='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2025-03-06 03:21:26.669 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.669 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.669 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.669 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.672 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.672 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.672 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.672 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.672 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.673 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.674 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2025-03-06 03:21:26.674 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.674 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.674 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.674 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.676 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityUserRole' entity with key '{UserId: 3, RoleId: 2}'.
2025-03-06 03:21:26.676 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.676 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.676 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.676 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.676 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.676 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.678 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.678 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.678 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.678 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.679 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.679 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.679 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.679 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.679 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.679 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.679 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.680 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.680 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.680 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.680 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.681 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.681 +02:00 [DBG] The 'User' entity with key '{Id: 3}' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'.
2025-03-06 03:21:26.681 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.681 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.681 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:21:26.686 +02:00 [DBG] Executing 2 update commands as a batch.
2025-03-06 03:21:26.688 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.688 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.690 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-03-06 03:21:26.697 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-03-06 03:21:26.698 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.698 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.698 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.699 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='2', @p1='3', @p25='3', @p2='0', @p3='1fb4baf8-8360-43cd-9ce7-59d0a113a041' (Size = 4000), @p26='d5497dec-595b-4104-ab68-f4a7f2b874fa' (Size = 4000), @p4='2025-03-06T01:21:26.5122906Z', @p5='lyboslavSSS@proton.me' (Size = 256), @p6='False', @p7='0', @p8=NULL (Size = 50), @p9='False', @p10='False', @p11=NULL (Size = 50), @p12='True', @p13=NULL (DbType = DateTimeOffset), @p14='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p15='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p16='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p17=NULL (Size = 4000), @p18='False', @p19=NULL (Size = 500), @p20='0001-01-01T00:00:00.0000000', @p21='True', @p22='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p23='False', @p24='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [CreatedAt] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FailedLoginAttempts] = @p7, [FirstName] = @p8, [IsAdmin] = @p9, [IsLockedOut] = @p10, [LastName] = @p11, [LockoutEnabled] = @p12, [LockoutEnd] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [RefreshToken] = @p19, [RefreshTokenExpiry] = @p20, [RememberMe] = @p21, [SecurityStamp] = @p22, [TwoFactorEnabled] = @p23, [UserName] = @p24
OUTPUT 1
WHERE [Id] = @p25 AND [ConcurrencyStamp] = @p26;
2025-03-06 03:21:26.709 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='2', @p1='3', @p25='3', @p2='0', @p3='1fb4baf8-8360-43cd-9ce7-59d0a113a041' (Size = 4000), @p26='d5497dec-595b-4104-ab68-f4a7f2b874fa' (Size = 4000), @p4='2025-03-06T01:21:26.5122906Z', @p5='lyboslavSSS@proton.me' (Size = 256), @p6='False', @p7='0', @p8=NULL (Size = 50), @p9='False', @p10='False', @p11=NULL (Size = 50), @p12='True', @p13=NULL (DbType = DateTimeOffset), @p14='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p15='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p16='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p17=NULL (Size = 4000), @p18='False', @p19=NULL (Size = 500), @p20='0001-01-01T00:00:00.0000000', @p21='True', @p22='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p23='False', @p24='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [CreatedAt] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [FailedLoginAttempts] = @p7, [FirstName] = @p8, [IsAdmin] = @p9, [IsLockedOut] = @p10, [LastName] = @p11, [LockoutEnabled] = @p12, [LockoutEnd] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [RefreshToken] = @p19, [RefreshTokenExpiry] = @p20, [RememberMe] = @p21, [SecurityStamp] = @p22, [TwoFactorEnabled] = @p23, [UserName] = @p24
OUTPUT 1
WHERE [Id] = @p25 AND [ConcurrencyStamp] = @p26;
2025-03-06 03:21:26.709 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.709 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.711 +02:00 [DBG] Committing transaction.
2025-03-06 03:21:26.715 +02:00 [DBG] Committed transaction.
2025-03-06 03:21:26.717 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.717 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.719 +02:00 [DBG] Disposing transaction.
2025-03-06 03:21:26.719 +02:00 [DBG] The 'IdentityUserRole' entity with key '{UserId: 3, RoleId: 2}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:21:26.719 +02:00 [DBG] The 'User' entity with key '{Id: 3}' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'.
2025-03-06 03:21:26.719 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-03-06 03:21:26.722 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.723 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.723 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.723 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.723 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.723 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.724 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2025-03-06 03:21:26.724 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.724 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.724 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.724 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.725 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.725 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.725 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.725 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.725 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.725 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.726 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='LYBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 03:21:26.726 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.726 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.726 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.726 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.726 +02:00 [DBG] The 'User' entity with key '{Id: 3}' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'.
2025-03-06 03:21:26.726 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.726 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.726 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:21:26.727 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.727 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.727 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.727 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.727 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.727 +02:00 [DBG] Executing DbCommand [Parameters=[@p23='3', @p0='0', @p1='dae56e35-74da-48d6-acb6-6643e5299da5' (Size = 4000), @p24='1fb4baf8-8360-43cd-9ce7-59d0a113a041' (Size = 4000), @p2='2025-03-06T01:21:26.5122906Z', @p3='lyboslavSSS@proton.me' (Size = 256), @p4='False', @p5='0', @p6=NULL (Size = 50), @p7='False', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p14='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17='Bq3E7G6bd6uTZmT6mOqgr7mz5IiAZ+NlNLNCqDaGEkV9Fg+KxrDA+ujwfpU3wOkYjG6QUID/1o0E2t58bmjPdQ==' (Size = 500), @p18='2025-05-05T01:21:26.7219898Z', @p19='True', @p20='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p21='False', @p22='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedAt] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FailedLoginAttempts] = @p5, [FirstName] = @p6, [IsAdmin] = @p7, [IsLockedOut] = @p8, [LastName] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [NormalizedEmail] = @p12, [NormalizedUserName] = @p13, [PasswordHash] = @p14, [PhoneNumber] = @p15, [PhoneNumberConfirmed] = @p16, [RefreshToken] = @p17, [RefreshTokenExpiry] = @p18, [RememberMe] = @p19, [SecurityStamp] = @p20, [TwoFactorEnabled] = @p21, [UserName] = @p22
OUTPUT 1
WHERE [Id] = @p23 AND [ConcurrencyStamp] = @p24;
2025-03-06 03:21:26.732 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p23='3', @p0='0', @p1='dae56e35-74da-48d6-acb6-6643e5299da5' (Size = 4000), @p24='1fb4baf8-8360-43cd-9ce7-59d0a113a041' (Size = 4000), @p2='2025-03-06T01:21:26.5122906Z', @p3='lyboslavSSS@proton.me' (Size = 256), @p4='False', @p5='0', @p6=NULL (Size = 50), @p7='False', @p8='False', @p9=NULL (Size = 50), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p13='LYBOSLAVSSS@PROTON.ME' (Size = 256), @p14='AQAAAAIAAYagAAAAEJZc4qSMfuzE4KCrur0sShusBy9LQz921yqo6GKy5DOIJxqTL3gTi2eH6AEv8MPuWA==' (Size = 4000), @p15=NULL (Size = 4000), @p16='False', @p17='Bq3E7G6bd6uTZmT6mOqgr7mz5IiAZ+NlNLNCqDaGEkV9Fg+KxrDA+ujwfpU3wOkYjG6QUID/1o0E2t58bmjPdQ==' (Size = 500), @p18='2025-05-05T01:21:26.7219898Z', @p19='True', @p20='UIOXT7NDBRFNFDGK5SWEZXRRRP2NZU56' (Size = 4000), @p21='False', @p22='lyboslavSSS@proton.me' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedAt] = @p2, [Email] = @p3, [EmailConfirmed] = @p4, [FailedLoginAttempts] = @p5, [FirstName] = @p6, [IsAdmin] = @p7, [IsLockedOut] = @p8, [LastName] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [NormalizedEmail] = @p12, [NormalizedUserName] = @p13, [PasswordHash] = @p14, [PhoneNumber] = @p15, [PhoneNumberConfirmed] = @p16, [RefreshToken] = @p17, [RefreshTokenExpiry] = @p18, [RememberMe] = @p19, [SecurityStamp] = @p20, [TwoFactorEnabled] = @p21, [UserName] = @p22
OUTPUT 1
WHERE [Id] = @p23 AND [ConcurrencyStamp] = @p24;
2025-03-06 03:21:26.733 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.733 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.733 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.733 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.733 +02:00 [DBG] The 'User' entity with key '{Id: 3}' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'.
2025-03-06 03:21:26.733 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:21:26.736 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-03-06 03:21:26.736 +02:00 [DBG] No information found on request to perform content negotiation.
2025-03-06 03:21:26.736 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-03-06 03:21:26.736 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-03-06 03:21:26.736 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-03-06 03:21:26.738 +02:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType13`2[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-06 03:21:26.740 +02:00 [INF] Executed action APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server) in 248.5603ms
2025-03-06 03:21:26.740 +02:00 [INF] Executed endpoint 'APIMonitor.server.Identity.Controllers.RegisterController.Register (APIMonitor.server)'
2025-03-06 03:21:26.740 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 03:21:26.741 +02:00 [DBG] 'ApplicationDbContext' generated temporary value '-2147482641' for the property 'AuditLog.Id'.
2025-03-06 03:21:26.741 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'AuditLog' entity with key '{Id: -2147482641}'.
2025-03-06 03:21:26.741 +02:00 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.741 +02:00 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-03-06 03:21:26.741 +02:00 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-03-06 03:21:26.741 +02:00 [DBG] Creating DbConnection.
2025-03-06 03:21:26.741 +02:00 [DBG] Created DbConnection. (0ms).
2025-03-06 03:21:26.741 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.742 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.742 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 03:21:26.742 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.742 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 03:21:26.742 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:21:26.7403743Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:21:26.4833742Z', @p6='256', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:21:26.745 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='POST /api/Register/register' (Nullable = false) (Size = 200), @p1='2025-03-06T01:21:26.7403743Z', @p2='Query: ' (Nullable = false) (Size = 1000), @p3='127.0.0.1' (Nullable = false) (Size = 15), @p4='unknown' (Nullable = false) (Size = 39), @p5='2025-03-06T01:21:26.4833742Z', @p6='256', @p7='Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0' (Nullable = false) (Size = 500), @p8='2'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AuditLogs] ([Action], [Date], [Details], [Ipv4Address], [Ipv6Address], [RequestTimestamp], [ResponseTimeMs], [UserAgent], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-03-06 03:21:26.745 +02:00 [DBG] The foreign key property 'AuditLog.Id' was detected as changed from '-2147482641' to '251' for entity with key '{Id: 251}'.
2025-03-06 03:21:26.745 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.746 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 03:21:26.746 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.746 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 03:21:26.746 +02:00 [DBG] The 'AuditLog' entity with key '{Id: 251}' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'.
2025-03-06 03:21:26.746 +02:00 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-03-06 03:21:26.746 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:21:26.746 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.746 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:21:26.746 +02:00 [DBG] Connection id "0HNAS9CU2B363" completed keep alive response.
2025-03-06 03:21:26.746 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 03:21:26.747 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 03:21:26.747 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 03:21:26.747 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5028/api/Register/register - 200 null application/json; charset=utf-8 264.0327ms
2025-03-06 03:23:22.276 +02:00 [DBG] Connection id "0HNAS9CU2B363" received FIN.
2025-03-06 03:23:22.276 +02:00 [DBG] Connection id "0HNAS9CU2B363" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-03-06 03:23:22.276 +02:00 [DBG] Connection id "0HNAS9CU2B363" disconnecting.
2025-03-06 03:23:22.276 +02:00 [DBG] Connection id "0HNAS9CU2B363" stopped.
2025-03-06 03:25:22.487 +02:00 [INF] Application is shutting down...
2025-03-06 03:25:22.488 +02:00 [DBG] Hosting stopping
2025-03-06 03:25:22.501 +02:00 [DBG] Hosting stopped
2025-03-06 04:00:17.660 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 04:00:17.752 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 04:00:18.134 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 04:00:18.135 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 04:00:18.210 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 04:00:18.321 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 04:00:18.399 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 04:00:18.624 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 04:00:18.660 +02:00 [DBG] Creating DbConnection.
2025-03-06 04:00:18.678 +02:00 [DBG] Created DbConnection. (15ms).
2025-03-06 04:00:18.682 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:18.958 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:18.960 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 04:00:18.965 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-03-06 04:00:18.971 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-03-06 04:00:18.978 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 04:00:19.121 +02:00 [INF] Executed DbCommand (138ms) [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 04:00:19.170 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 1}'.
2025-03-06 04:00:19.187 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.192 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 66ms reading results.
2025-03-06 04:00:19.194 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.198 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (3ms).
2025-03-06 04:00:19.201 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.202 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.202 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 04:00:19.202 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 04:00:19.202 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 04:00:19.202 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 04:00:19.206 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 04:00:19.206 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 04:00:19.206 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.206 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 0ms reading results.
2025-03-06 04:00:19.206 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.207 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 04:00:19.209 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-06 04:00:19.214 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTimeOffset) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTimeOffset) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 04:00:19.217 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.217 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.217 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 04:00:19.217 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 04:00:19.217 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 04:00:19.217 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 04:00:19.221 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 04:00:19.250 +02:00 [ERR] An exception occurred while iterating over the results of a query for context type 'APIMonitor.server.Data.ApplicationDbContext'.
System.InvalidCastException: Unable to cast object of type 'System.DateTime' to type 'System.DateTimeOffset'.
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueFromSqlBufferInternal[T](SqlBuffer data, _SqlMetaData metaData, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueInternal[T](Int32 i, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue[T](Int32 i)
   at lambda_method85(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Unable to cast object of type 'System.DateTime' to type 'System.DateTimeOffset'.
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueFromSqlBufferInternal[T](SqlBuffer data, _SqlMetaData metaData, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueInternal[T](Int32 i, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue[T](Int32 i)
   at lambda_method85(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2025-03-06 04:00:19.251 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.251 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 29ms reading results.
2025-03-06 04:00:19.251 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.251 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 04:00:19.253 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 04:00:19.255 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 04:00:19.255 +02:00 [DBG] Disposed connection to database '' on server '' (0ms).
2025-03-06 23:43:32.768 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 23:43:32.919 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 23:43:33.603 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 23:43:33.605 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 23:43:33.750 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 23:43:34.032 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 23:43:34.149 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 23:43:34.476 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 23:43:34.531 +02:00 [DBG] Creating DbConnection.
2025-03-06 23:43:34.562 +02:00 [DBG] Created DbConnection. (26ms).
2025-03-06 23:43:34.570 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:44.329 +02:00 [ERR] An error occurred using the connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:44.400 +02:00 [ERR] An exception occurred while iterating over the results of a query for context type 'APIMonitor.server.Data.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Success)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, SqlCommand command, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, TimeoutTimer timeout, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, Func`3 accessTokenCallback)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:47759929-2127-4e8c-ba07-7540662a1f19
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Success)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, SqlCommand command, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, TimeoutTimer timeout, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, Func`3 accessTokenCallback)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:47759929-2127-4e8c-ba07-7540662a1f19
2025-03-06 23:43:44.422 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 23:43:44.429 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:44.439 +02:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-03-06 23:43:50.962 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-03-06 23:43:51.162 +02:00 [INF] User profile is available. Using '/home/lyuboslav/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-06 23:43:52.035 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserRole<int>' as the properties are already covered by the index {'UserId', 'RoleId'}.
2025-03-06 23:43:52.036 +02:00 [DBG] The index {'UserId'} was not created on entity type 'IdentityUserToken<int>' as the properties are already covered by the index {'UserId', 'LoginProvider', 'Name'}.
2025-03-06 23:43:52.207 +02:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2025-03-06 23:43:52.451 +02:00 [DBG] Entity Framework Core 9.0.1 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.1' with options: SensitiveDataLoggingEnabled EngineType=SqlServer 
2025-03-06 23:43:52.558 +02:00 [DBG] Compiling query expression: 
'DbSet<IdentityRole<int>>()
    .FirstOrDefault(r => r.NormalizedName == __normalizedName_0)'
2025-03-06 23:43:52.963 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<IdentityRole<int>>(
    asyncEnumerable: SingleQueryingEnumerable.Create<IdentityRole<int>>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: IdentityRole<int>.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: IdentityRole<int>.ConcurrencyStamp (string) Concurrency, 1], [Property: IdentityRole<int>.Name (string) MaxLength(256), 2], [Property: IdentityRole<int>.NormalizedName (string) Index MaxLength(256), 3] }
            SELECT TOP(1) a.Id, a.ConcurrencyStamp, a.Name, a.NormalizedName
            FROM AspNetRoles AS a
            WHERE a.NormalizedName == @__normalizedName_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            IdentityRole<int> entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                IdentityRole<int> instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(IdentityRole<int>);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: IdentityRole<int>.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (IdentityRole<int>)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]: 
                            {
                                return 
                                {
                                    IdentityRole<int> instance;
                                    instance = new IdentityRole<int>();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<NormalizedName>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: IdentityRole<int> | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("Microsoft.AspNetCore.Identity.IdentityRole<int>")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(IdentityRole<int>)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 23:43:53.024 +02:00 [DBG] Creating DbConnection.
2025-03-06 23:43:53.055 +02:00 [DBG] Created DbConnection. (27ms).
2025-03-06 23:43:53.063 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.563 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.577 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 23:43:53.586 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-03-06 23:43:53.597 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-03-06 23:43:53.608 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 23:43:53.698 +02:00 [INF] Executed DbCommand (87ms) [Parameters=[@__normalizedName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 23:43:53.774 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 1}'.
2025-03-06 23:43:53.804 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.815 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 106ms reading results.
2025-03-06 23:43:53.820 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.831 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (10ms).
2025-03-06 23:43:53.839 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.842 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.842 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 23:43:53.842 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 23:43:53.843 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 23:43:53.843 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 23:43:53.855 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedName_0='USER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2025-03-06 23:43:53.856 +02:00 [DBG] Context 'ApplicationDbContext' started tracking 'IdentityRole' entity with key '{Id: 2}'.
2025-03-06 23:43:53.857 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.857 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 1ms reading results.
2025-03-06 23:43:53.857 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.858 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 23:43:53.862 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .SingleOrDefault(u => u.NormalizedEmail == __normalizedEmail_0)'
2025-03-06 23:43:53.872 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTimeOffset) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.AccessFailedCount (int) Required, 1], [Property: User.ConcurrencyStamp (string) Concurrency, 2], [Property: User.CreatedAt (DateTime) Required, 3], [Property: User.Email (string) MaxLength(256), 4], [Property: User.EmailConfirmed (bool) Required, 5], [Property: User.FailedLoginAttempts (int) Required, 6], [Property: User.FirstName (string) MaxLength(50), 7], [Property: User.IsAdmin (bool) Required, 8], [Property: User.IsLockedOut (bool) Required, 9], [Property: User.LastName (string) MaxLength(50), 10], [Property: User.LockoutEnabled (bool) Required, 11], [Property: User.LockoutEnd (DateTimeOffset?), 12], [Property: User.NormalizedEmail (string) Index MaxLength(256), 13], [Property: User.NormalizedUserName (string) Index MaxLength(256), 14], [Property: User.PasswordHash (string), 15], [Property: User.PhoneNumber (string), 16], [Property: User.PhoneNumberConfirmed (bool) Required, 17], [Property: User.RefreshToken (string) MaxLength(500), 18], [Property: User.RefreshTokenExpiry (DateTimeOffset) Required, 19], [Property: User.RememberMe (bool) Required, 20], [Property: User.SecurityStamp (string), 21], [Property: User.TwoFactorEnabled (bool) Required, 22], [Property: User.UserName (string) MaxLength(256), 23] }
            SELECT TOP(2) a.Id, a.AccessFailedCount, a.ConcurrencyStamp, a.CreatedAt, a.Email, a.EmailConfirmed, a.FailedLoginAttempts, a.FirstName, a.IsAdmin, a.IsLockedOut, a.LastName, a.LockoutEnabled, a.LockoutEnd, a.NormalizedEmail, a.NormalizedUserName, a.PasswordHash, a.PhoneNumber, a.PhoneNumberConfirmed, a.RefreshToken, a.RefreshTokenExpiry, a.RememberMe, a.SecurityStamp, a.TwoFactorEnabled, a.UserName
            FROM AspNetUsers AS a
            WHERE a.NormalizedEmail == @__normalizedEmail_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccessFailedCount>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ConcurrencyStamp>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(4) ? default(string) : dataReader.GetString(4);
                                    instance.<EmailConfirmed>k__BackingField = dataReader.GetBoolean(5);
                                    instance.<FailedLoginAttempts>k__BackingField = dataReader.GetInt32(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<IsAdmin>k__BackingField = dataReader.GetBoolean(8);
                                    instance.<IsLockedOut>k__BackingField = dataReader.GetBoolean(9);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<LockoutEnabled>k__BackingField = dataReader.GetBoolean(11);
                                    instance.<LockoutEnd>k__BackingField = dataReader.IsDBNull(12) ? default(DateTimeOffset?) : (DateTimeOffset?)dataReader.GetFieldValue<DateTimeOffset>(12);
                                    instance.<NormalizedEmail>k__BackingField = dataReader.IsDBNull(13) ? default(string) : dataReader.GetString(13);
                                    instance.<NormalizedUserName>k__BackingField = dataReader.IsDBNull(14) ? default(string) : dataReader.GetString(14);
                                    instance.<PasswordHash>k__BackingField = dataReader.IsDBNull(15) ? default(string) : dataReader.GetString(15);
                                    instance.<PhoneNumber>k__BackingField = dataReader.IsDBNull(16) ? default(string) : dataReader.GetString(16);
                                    instance.<PhoneNumberConfirmed>k__BackingField = dataReader.GetBoolean(17);
                                    instance.<RefreshToken>k__BackingField = dataReader.IsDBNull(18) ? default(string) : dataReader.GetString(18);
                                    instance.<RefreshTokenExpiry>k__BackingField = dataReader.GetFieldValue<DateTimeOffset>(19);
                                    instance.<RememberMe>k__BackingField = dataReader.GetBoolean(20);
                                    instance.<SecurityStamp>k__BackingField = dataReader.IsDBNull(21) ? default(string) : dataReader.GetString(21);
                                    instance.<TwoFactorEnabled>k__BackingField = dataReader.GetBoolean(22);
                                    instance.<UserName>k__BackingField = dataReader.IsDBNull(23) ? default(string) : dataReader.GetString(23);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("APIMonitor.server.Identity.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: APIMonitor.server.Data.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-03-06 23:43:53.875 +02:00 [DBG] Opening connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.875 +02:00 [DBG] Opened connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.876 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-03-06 23:43:53.876 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-03-06 23:43:53.876 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-03-06 23:43:53.876 +02:00 [DBG] Executing DbCommand [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 23:43:53.882 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='LYUBOSLAVSSS@PROTON.ME' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedAt], [a].[Email], [a].[EmailConfirmed], [a].[FailedLoginAttempts], [a].[FirstName], [a].[IsAdmin], [a].[IsLockedOut], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiry], [a].[RememberMe], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2025-03-06 23:43:53.924 +02:00 [ERR] An exception occurred while iterating over the results of a query for context type 'APIMonitor.server.Data.ApplicationDbContext'.
System.InvalidCastException: Unable to cast object of type 'System.DateTime' to type 'System.DateTimeOffset'.
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueFromSqlBufferInternal[T](SqlBuffer data, _SqlMetaData metaData, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueInternal[T](Int32 i, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue[T](Int32 i)
   at lambda_method85(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidCastException: Unable to cast object of type 'System.DateTime' to type 'System.DateTimeOffset'.
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueFromSqlBufferInternal[T](SqlBuffer data, _SqlMetaData metaData, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValueInternal[T](Int32 i, Boolean isAsync)
   at Microsoft.Data.SqlClient.SqlDataReader.GetFieldValue[T](Int32 i)
   at lambda_method85(Closure, QueryContext, DbDataReader, ResultContext, SingleQueryResultCoordinator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2025-03-06 23:43:53.925 +02:00 [DBG] Closing data reader to 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.925 +02:00 [DBG] A data reader for 'apiMonitor' on server 'localhost' is being disposed after spending 43ms reading results.
2025-03-06 23:43:53.925 +02:00 [DBG] Closing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.926 +02:00 [DBG] Closed connection to database 'apiMonitor' on server 'localhost' (0ms).
2025-03-06 23:43:53.930 +02:00 [DBG] 'ApplicationDbContext' disposed.
2025-03-06 23:43:53.933 +02:00 [DBG] Disposing connection to database 'apiMonitor' on server 'localhost'.
2025-03-06 23:43:53.935 +02:00 [DBG] Disposed connection to database '' on server '' (1ms).
